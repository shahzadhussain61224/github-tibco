<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx14="http://www.hp.com/process/2013-04/MDD/ValidationLog" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx13="http://www.hp.com/process/2013-04/MDD/RecordSet" xmlns:pfx12="http://www.hp.com/process/2013-04/MDD/RecordSetStructure" xmlns:pfx11="http://www.hp.com/process/2013-04/ChannelDataCollection/Validate/MetaDataDriven/RecordSet" xmlns:pfx10="http://www.hp.com/process/2013-04/ChannelDataCollection/Validate/MetaDataDriven/ValidationLog" xmlns:StringCustom="java://XpathStringFunctions" xmlns:pfx="http://www.hp.partnerdc/validation/structure" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.hp.com/partnerdc/schema/Types" xmlns:ns1="http://www.hp.com/schema/2013-04/ChannelDataCollection/Common/Types" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx5="http://www.hp.partnerdc/process/validate/structure/log" xmlns:pfx4="http://www.hp.com/partnerdc/schema/validationlog" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://www.hp.partnerdc/validation/log" xmlns:pfx2="http://www.hp.partnerdc/validation/file" xmlns:pfx9="http://www.hp.com/process/2013-04/ChannelDataCollection/Validate/MetaDataDriven/RecordSetStructure" xmlns:pfx8="http://www.hp.com/process/2013-04/ChannelDataCollection/Validate/MetaDataDriven" xmlns:pfx7="http://www.hp.partnerdc/process/validate/structure/genericfile" xmlns:pfx6="http://www.hp.partnerdc/process/validate/structure/format">
    <xsd:import namespace="http://www.hp.partnerdc/process/validate/structure/format" schemaLocation="/SharedResources/Schemas/Process/ValidateFileStructure/FileFormatStructure.xsd"/>
    <xsd:import namespace="http://www.hp.partnerdc/process/validate/structure/genericfile" schemaLocation="/SharedResources/Schemas/Process/ValidateFileStructure/GenericFileStructure.xsd"/>
    <xsd:import namespace="http://www.hp.partnerdc/process/validate/structure/log" schemaLocation="/SharedResources/Schemas/Process/ValidateFileStructure/ValidationLog.xsd"/>
    <xsd:import namespace="http://www.hp.com/process/2013-04/MDD/RecordSetStructure" schemaLocation="/SharedResources/Schemas/ValidateMetaDataDriven/RecordSetStructure.xsd"/>
    <xsd:import namespace="http://www.hp.com/process/2013-04/MDD/RecordSet" schemaLocation="/SharedResources/Schemas/ValidateMetaDataDriven/RecordSet.xsd"/>
    <xsd:import namespace="http://www.hp.com/process/2013-04/MDD/ValidationLog" schemaLocation="/SharedResources/Schema/ValidateMetaDataDriven/ValidationLog.xsd"/>
    <pd:name>Functions/MDDValidation/ValidateMetaDataDriven/ValidateFieldStructure.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="structure" type="pfx12:FieldStructure"/>
                    <xsd:element name="field" type="pfx13:Field"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>78</pd:startX>
    <pd:startY>99</pd:startY>
    <pd:returnBindings>
        <FieldValidationResult>
            <xsl:choose>
                <xsl:when test="$Check-String-Length/stringLengthCheck/pfx14:check/pfx14:status=&quot;Fail&quot; or&#xA;$Check-String-Pattern/stringPatternCheckMapper/pfx14:status=&quot;Fail&quot;">
                    <pfx14:status>
                        <xsl:value-of select="&quot;Fail&quot;"/>
                    </pfx14:status>
                </xsl:when>
                <xsl:otherwise>
                    <pfx14:status>
                        <xsl:value-of select="&quot;Pass&quot;"/>
                    </pfx14:status>
                </xsl:otherwise>
            </xsl:choose>
            <pfx14:outputfield>
                <pfx14:type>
                    <xsl:value-of select="$Start/root/field/pfx13:type"/>
                </pfx14:type>
                <pfx14:name>
                    <xsl:value-of select="$Start/root/field/pfx13:name"/>
                </pfx14:name>
            </pfx14:outputfield>
            <xsl:for-each select="$Check-String-Length/stringLengthCheck/pfx14:check">
                <pfx14:check>
                    <pfx14:status>
                        <xsl:value-of select="pfx14:status"/>
                    </pfx14:status>
                    <pfx14:name>
                        <xsl:value-of select="pfx14:name"/>
                    </pfx14:name>
                    <xsl:for-each select="pfx14:message">
                        <pfx14:message>
                            <pfx14:messageId>
                                <xsl:value-of select="pfx14:messageId"/>
                            </pfx14:messageId>
                        </pfx14:message>
                    </xsl:for-each>
                </pfx14:check>
            </xsl:for-each>
            <xsl:for-each select="$Check-String-Pattern/stringPatternCheckMapper/pfx14:check">
                <pfx14:check>
                    <pfx14:status>
                        <xsl:value-of select="pfx14:status"/>
                    </pfx14:status>
                    <pfx14:name>
                        <xsl:value-of select="pfx14:name"/>
                    </pfx14:name>
                    <xsl:for-each select="pfx14:message">
                        <pfx14:message>
                            <pfx14:messageId>
                                <xsl:value-of select="pfx14:messageId"/>
                            </pfx14:messageId>
                        </pfx14:message>
                    </xsl:for-each>
                </pfx14:check>
            </xsl:for-each>
        </FieldValidationResult>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="FieldValidationResult" type="pfx14:FieldValidationResult"/>
    </pd:endType>
    <pd:endX>796</pd:endX>
    <pd:endY>103</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://www.hp.com/process/partnerdc/validation</pd:targetNamespace>
    <pd:activity name="Check String Length">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>191</pd:x>
        <pd:y>110</pd:y>
        <config>
            <element>
                <xsd:element name="stringLengthCheck" type="pfx14:FieldValidationResult"/>
            </element>
        </config>
        <pd:inputBindings>
            <stringLengthCheck>
                <xsl:variable name="maxLength" select="tib:if-absent($Start/root/structure/pfx12:format/pfx12:stringFormat/pfx12:maxLength, 250)"/>
                <xsl:variable name="check" select="string-length(tib:trim($Start/root/field/pfx13:name)) &lt;= $maxLength"/>
                <xsl:choose>
                    <xsl:when test="$check">
                        <pfx14:status>
                            <xsl:value-of select="&quot;Pass&quot;"/>
                        </pfx14:status>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx14:status>
                            <xsl:value-of select="&quot;Fail&quot;"/>
                        </pfx14:status>
                    </xsl:otherwise>
                </xsl:choose>
                <pfx14:outputfield>
                    <pfx14:type>
                        <xsl:value-of select="$Start/root/field/pfx13:type"/>
                    </pfx14:type>
                    <pfx14:name>
                        <xsl:value-of select="$Start/root/field/pfx13:name"/>
                    </pfx14:name>
                </pfx14:outputfield>
                <pfx14:check>
                    <xsl:choose>
                        <xsl:when test="$check">
                            <pfx14:status>
                                <xsl:value-of select="&quot;Pass&quot;"/>
                            </pfx14:status>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx14:status>
                                <xsl:value-of select="&quot;Fail&quot;"/>
                            </pfx14:status>
                        </xsl:otherwise>
                    </xsl:choose>
                    <pfx14:name>
                        <xsl:value-of select="&quot;String Length Check&quot;"/>
                    </pfx14:name>
                    <pfx14:message>
                        <xsl:choose>
                            <xsl:when test="string-length($Start/root/field/pfx13:name)>$maxLength">
                                <pfx14:messageId>
                                    <xsl:value-of select="concat($Start/root/field/pfx13:name, &quot;: Greater Than Maximum Length of &quot;,$Start/root/structure/pfx12:format/pfx12:stringFormat/pfx12:maxLength)"/>
                                </pfx14:messageId>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx14:messageId>
                                    <xsl:value-of select="&quot;&quot;"/>
                                </pfx14:messageId>
                            </xsl:otherwise>
                        </xsl:choose>
                    </pfx14:message>
                </pfx14:check>
            </stringLengthCheck>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="For Each Pattern">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>467</pd:x>
        <pd:y>122</pd:y>
        <pd:width>146</pd:width>
        <pd:height>155</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>repeat</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:indexSlot>i</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:repeatCondition>$i=count($Start/root/structure/pfx12:format/pfx12:stringFormat/pfx12:patterns/pfx12:options) or
StringCustom:matches(tib:trim($Start/root/field/pfx13:name), $Start/root/structure/pfx12:format/pfx12:stringFormat/pfx12:patterns/pfx12:options[$i])="fail"</pd:repeatCondition>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Check String Pattern</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Check String Pattern</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Check String Pattern">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>537</pd:x>
            <pd:y>208</pd:y>
            <config>
                <element>
                    <xsd:element name="stringPatternCheckMapper" type="pfx14:FieldValidationResult"/>
                </element>
            </config>
            <pd:inputBindings>
                <xsl:variable name="check" select="StringCustom:matches(tib:trim($Start/root/field/pfx13:name), $Start/root/structure/pfx12:format/pfx12:stringFormat/pfx12:patterns/pfx12:options[$i]) and&#xA;tib:trim($Start/root/field/pfx13:name)!=$Start/root/structure/pfx12:activityName and&#xA;StringCustom:matches(tib:trim($Start/root/field/pfx13:name),concat('^',$Start/root/structure/pfx12:activityName,'-?[1-9]*$'))"/>
                <stringPatternCheckMapper>
                    <xsl:choose>
                        <xsl:when test="$check">
                            <pfx14:status>
                                <xsl:value-of select="&quot;Pass&quot;"/>
                            </pfx14:status>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx14:status>
                                <xsl:value-of select="&quot;Fail&quot;"/>
                            </pfx14:status>
                        </xsl:otherwise>
                    </xsl:choose>
                    <pfx14:outputfield>
                        <pfx14:type>
                            <xsl:value-of select="$Start/root/field/pfx13:type"/>
                        </pfx14:type>
                        <pfx14:name>
                            <xsl:value-of select="$Start/root/field/pfx13:name"/>
                        </pfx14:name>
                    </pfx14:outputfield>
                    <pfx14:check>
                        <xsl:choose>
                            <xsl:when test="$check">
                                <pfx14:status>
                                    <xsl:value-of select="&quot;Pass&quot;"/>
                                </pfx14:status>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx14:status>
                                    <xsl:value-of select="&quot;Fail&quot;"/>
                                </pfx14:status>
                            </xsl:otherwise>
                        </xsl:choose>
                        <pfx14:name>
                            <xsl:value-of select="&quot;String Pattern Check&quot;"/>
                        </pfx14:name>
                        <pfx14:message>
                            <xsl:choose>
                                <xsl:when test="$check">
                                    <pfx14:messageId>
                                        <xsl:value-of select="&quot;&quot;"/>
                                    </pfx14:messageId>
                                </xsl:when>
                                <xsl:when test="tib:trim($Start/root/field/pfx13:name)=$Start/root/structure/pfx12:activityName">
                                    <pfx14:messageId>
                                        <xsl:value-of select="concat($Start/root/field/pfx13:name, &quot;: Default Activity name is used&quot;)"/>
                                    </pfx14:messageId>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx14:messageId>
                                        <xsl:value-of select="concat($Start/root/field/pfx13:name, &quot;: Invalid Pattern Compared to  &quot;, $Start/root/structure/pfx12:format/pfx12:stringFormat/pfx12:patterns/pfx12:options[$i], ' Pattern')"/>
                                    </pfx14:messageId>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx14:message>
                    </pfx14:check>
                </stringPatternCheckMapper>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Pattern Exists">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>320</pd:x>
        <pd:y>101</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>Check String Length</pd:from>
        <pd:to>Pattern Exists</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>For Each Pattern</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Pattern Exists</pd:from>
        <pd:to>For Each Pattern</pd:to>
        <pd:xpathDescription>Yes</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Start/root/structure/pfx12:format/pfx12:stringFormat/pfx12:patterns/pfx12:options)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Pattern Exists</pd:from>
        <pd:to>End</pd:to>
        <pd:xpathDescription>No</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Check String Length</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>